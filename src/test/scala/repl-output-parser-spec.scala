package wrap

import org.scalatest.{PropSpec, Matchers}
import org.scalatest.prop.{PropertyChecks, TableDrivenPropertyChecks}

import atto.ParseResult.Done

class ReplOutputParserSpec extends PropSpec with Matchers with PropertyChecks with TableDrivenPropertyChecks {

  val examples = Table(
    ( "Input"                             , "Expected Output" ),
    ( "import slick.driver.H2Driver.api._", Import("slick.driver.H2Driver.api._") ),
    ( "defined class Message"             , CaseClass("Message") ),
    ( "freshTestData: Seq[Message]"       , Method("freshTestData", "Seq[Message]") ),
    ( "messages: slick.lifted.TableQuery[MessageTable] = Rep(TableExpansion)"                    , Value("messages", "slick.lifted.TableQuery[MessageTable]", "Rep(TableExpansion)") ),
    ( "db: slick.driver.H2Driver.backend.Database = slick.jdbc.JdbcBackend$DatabaseDef@68b11cb9" , Value("db", "slick.driver.H2Driver.backend.Database", "slick.jdbc.JdbcBackend$DatabaseDef@68b11cb9") ),
    ( "halSays: slick.lifted.Query[MessageTable,MessageTable#TableElementType,Seq] = Rep(Filter)", Value("halSays", "slick.lifted.Query[MessageTable,MessageTable#TableElementType,Seq]", "Rep(Filter)") ),
    ( """res0: String = create table "message" ("sender" VARCHAR NOT NULL,"content" VARCHAR NOT NULL,"id" BIGINT GENERATED BY DEFAULT AS IDENTITY(START WITH 1) NOT NULL PRIMARY KEY)""" ,
       Value("res0", "String", """create table "message" ("sender" VARCHAR NOT NULL,"content" VARCHAR NOT NULL,"id" BIGINT GENERATED BY DEFAULT AS IDENTITY(START WITH 1) NOT NULL PRIMARY KEY)""") )
  )

  property("Can Parse Examples") {
    forAll (examples) { (in: String, expected: ReplExpr) =>
      ReplOutputParser.parse(in) shouldBe Done("", expected)
    }
  }
}